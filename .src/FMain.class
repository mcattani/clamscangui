' Gambas class file

'' ' *********************************************************************************************************
'' ' Ce programme est un logiciel libre; vous pouvez le redistribuer ou le modifier suivant
'' ' les termes de la GNU General Public License telle que publiée par la Free Software Foundation ;
'' ' soit la version 3 de la licence, soit( à votre gré) toute version ultérieure.
'' ' Ce programme est distribué dans l'espoir qu'il sera utile, mais SANS AUCUNE GARANTIE ;
'' ' sans même la garantie tacite de QUALITÉ MARCHANDE ou d'ADÉQUATION à UN BUT PARTICULIER.
'' ' Consultez la GNU General Public License pour plus de détails.
'' ' Vous devez avoir reçu une copie de la GNU General Public License en même temps que ce programme ;
'' ' si ce n 'est pas le cas, consultez <http://www.gnu.org/licenses>.
'' ' *********************************************************************************************************

'*************************** clés boolean à transmettre à clamscan *********************
Public SalidaERR As Boolean
Public SinINF As Boolean
Public Recursive As Boolean
Public SuprimirOK As Boolean
Public Infect As Boolean
Public Bell As Boolean
Public Remover As Boolean
Public AppsIndeseadas As Boolean
Public Mail As Boolean
Public PDF As Boolean
Public SWF As Boolean
Public HTML As Boolean
Public HWP3 As Boolean
Public PE As Boolean
Public ELF As Boolean
Public OLE2 As Boolean
Public ARCH As Boolean
Public PhishingSig As Boolean
Public PhishingUrl As Boolean
Public Algo As Boolean
Public AllMatch As Boolean
Public CrossFs As Boolean
Public Intersection As Boolean
Public Structured As Boolean
Public Verbose As Boolean
Public ArchVerbose As Boolean
Public Adebug As Boolean
Public Json As Boolean
'*******************************************************************************
Public maCle As Integer                                                         'clé de position
Public iFlag As Integer                                                         'drapeau choix du menu
Public iForm As Integer                                                         'drapeau choix du formulaire

Public Ruta As String                                                           'endroit ou fichier à scanner
Public sMot As String                                                           'string à transmettre en commande shell
Public quarantaine As String                                                    'nom du dossier de quarantaine
Public historic As String                                                       'nom du fichier historque
Public clamLog As String                                                        'nom du ficier log de session
Public pil As String                                                            'liste des fichiers vérolés
Public liste As String                                                          'liste des fichiers en quarantaine
Public langue As String                                                         'langue
Public sCommande As String                                                      'commande à transmettre
Public email As String                                                          'mail pour soumission
Public nom As String                                                            'nom pour soumission
Public monTexte As String                                                       'texte pour commande à transmettre

Public Quarant As Boolean                                                       'drapeau pour quarantaine
Public bSortie As Boolean                                                       'drapeau de sortie de programme
Public bFlag As Boolean                                                         'drapeau boolean
Public bSudo As Boolean                                                         'sudo appliqué
Public bTBSudo As Boolean                                                       'si bouton sudo enfoncé
Public bTBKill As Boolean                                                       'proc kill ou pas
Public SonOn As Boolean

Public fListe As File                                                           'fichier liste virus en quarantaine
Public fPil As File                                                             'fichier liste virus trouvés
Public leFichier As File                                                        'fichier log
Public histo As File                                                            'fichier historique

Public dTemps As Date                                                           'temps écoulé du scan
Public Entree As Boolean                                                        'entrée dans prog

Public Sub Exit()

    SalidaERR = Null
    SinINF = Null
    Recursive = Null
    SuprimirOK = Null
    Infect = Null
    Bell = Null
    Remover = Null
    AppsIndeseadas = Null
    Mail = Null
    PDF = Null
    SWF = Null
    HTML = Null
    HWP3 = Null
    PE = Null
    ELF = Null
    OLE2 = Null
    ARCH = Null
    PhishingSig = Null
    PhishingUrl = Null
    Algo = Null
    AllMatch = Null
    CrossFs = Null
    Intersection = Null
    Structured = Null
    Verbose = Null
    ArchVerbose = Null
    Adebug = Null
    Json = Null
    Ruta = Null                                                        'endroit ou fichier à scanner
    sMot = Null                                                        'string à transmettre en commande shell
    quarantaine = Null                                                   'nom du dossier de quarantaine
    historic = Null                                                     'nom du fichier historque
    clamLog = Null                                                      'nom du ficier log de session
    pil = Null                                                       'liste des fichiers vérolés
    liste = Null                                                        'liste des fichiers en quarantaine
    langue = Null                                                        'langue
    sCommande = Null                                                    'commande à transmettre
    email = Null                                                       'mail pour soumission
    nom = Null                                                          'nom pour soumission
    monTexte = Null                                                      'texte pour commande à transmettre
    Quarant = Null                                                       'drapeau pour quarantaine
    bSortie = Null                                                      'drapeau de sortie de programme
    bFlag = Null                                                      'drapeau boolean
    bSudo = Null                                                        'sudo appliqué
    bTBSudo = Null                                                       'si bouton sudo enfoncé
    bTBKill = Null                                                      'proc kill ou pas
    SonOn = Null
    fListe = Null                                                         'fichier liste virus en quarantaine
    fPil = Null                                                           'fichier liste virus trouvés
    leFichier = Null                                                      'fichier log
    histo = Null                                                         'fichier historique
    dTemps = Null                                                         'temps écoulé du scan
    Entree = Null                                                       'entrée dans prog

End

Public Sub Form_Open()                                                          'Form principale appelée par le Module1

    PanLimit.Visible = False                                                   'panneau des limites, invisible
    Entree = True

    If Not Exist("/usr/bin/clamscan") Then                                     'test installation de clamscan
        Message.Title = ("¡Atención!")
        Message.Warning(("Debe tener instalado el antivirus ClamAv para poder utilizar esta App"))
        Me.Close
    Endif

    If Not Exist("/etc/clamav/clamd.conf") Then                                'test installation de clamav et de son deamon
        Message.Title = ("¡Atención!") & (" ~ Instalación incompleta de Clamav")
        Message(("Para reconfigurar clamd, ejecute sudo dpkg-reconfigure clamav-daemon") & "\n" & ("Para reconfigurar clamav-milter, ejecute sudo dpkg-reconfigure clamav-milter"))
        Me.Close
    Endif

    quarantaine = User.Home &/ ".clamscangui/viruses"                          'dossier de quarantaine des virus
    clamLog = User.Home &/ ".clamscangui/ClamScanGui_Log.txt"                  'fichier Log
    historic = User.Home &/ ".clamscangui/Historique"                          'fichier historique
    liste = User.Home &/ ".clamscangui/viruses/liste.txt"                      'liste des virus en quarantaine
    pil = User.Home &/ ".clamscangui/pil.txt"                                  'liste des virus trouvés

    If Not Exist(quarantaine) Then                                             'création du dossier de quarantaine des virus
        Try Mkdir User.Home &/ ".clamscangui"
        Try Mkdir quarantaine
    Endif

    If Not Exist(clamLog) Then                                                 'fichier Log
        leFichier = Open clamLog For Create
    Endif

    If Not Exist(historic) Then                                                'fichier historique
        histo = Open historic For Create
    Endif

    If Not Exist(pil) Then                                                     'liste des fichiers corrompus
        fPil = Open pil For Create
    Endif

    If Not Exist(liste) Then                                                   'liste des fichiers en quarantaine
        fListe = Open liste For Create
    Endif

    quarantaine = Shell$(quarantaine)                                          'Quote du nom du répertoire de quarantaine

    FMain.Text = Application.Name & " " & Application.Version                  'titre de la form

    If Settings["First_Time", True] = True Then                                'démarrage première fois
        Settings["First_Time"] = False
        premiereFois                                                          'premier démarrage du prog
    Endif
    LoadSettings()                                                             'réglages enregistrés
    Cerf.ShowModal()                                                           'splash form après loadsettings à cause du son
    Entree = False

End

Public Sub sortie()

    While fc.Children.Count
        fc.Children.Clear
    Wend
    fc.Delete
    While dc.Children.Count
        dc.Children.Clear
    Wend
    dc.Delete
    While tp.Children.Count
        tp.Children.Clear
    Wend
    tp.Delete

    txSalida.Delete
    txSalida2.Delete
    txSalida3.Delete
    While PanGauche.Children.Count
        PanGauche.Children.Clear
    Wend
    PanGauche.Delete
    While PanLimit.Children.Count
        PanLimit.Children.Clear
    Wend
    PanLimit.Delete

    fc = Null
    dc = Null
    tp = Null
    txSalida = Null
    txSalida2 = Null
    txSalida3 = Null
    PanGauche = Null
    PanLimit = Null

    FMain.Exit                                                                  'sortie

End

Public Sub Form_Close()                                                         'fermeture de la Form principale

    SaveSettings()                                                              'sauvegarde des réglages avant sortie programme
    Me.Hide()
    Module1.quitAppli
    sortie()

End

Public Sub mnSalir_Click()

    Wait
    Me.Close

End

Public Sub premiereFois()                                                       'réglages pour une première fois

    MnuAuto.Value = True
    MnuManuelle.Value = False
    MnuImmediate.Enabled = False
    MnuDeplacer.Value = False
    MnuVirus.Enabled = False
    MnuCorrompus.Enabled = False
    MenuSon.Value = True

    Settings["Menu/Auto"] = MnuAuto.Value
    Settings["Menu/Manuel"] = MnuManuelle.Value
    Settings["Menu/Immediat"] = MnuImmediate.Enabled
    Settings["Menu/Deplacer"] = MnuDeplacer.Value
    Settings["Menu/Virus"] = MnuVirus.Enabled
    Settings["General/LangInit"] = Left(System.Language, 2)
    Settings["General/courriel"] = ""
    Settings["General/nom"] = ""
    Settings["General/sons"] = MenuSon.Value

    mnuHWP3.Value = True
    mnuXML.Value = True
    mnuSWF.Value = True
    mnuPdf.Value = True
    mnuMail.Value = True
    mnuPE.Value = True
    mnuELF.Value = True
    MnuOLE2.Value = True
    MnuARCH.Value = True
    MnuPhishingSig.Value = True
    MnuPhishingUrl.Value = True
    MnuCrossFs.value = True
    MnuAlgo.Value = True

    Settings["Menu/pHWP3"] = mnuHWP3.Value
    Settings["Menu/pXML"] = mnuXML.Value
    Settings["Menu/pSWF"] = mnuSWF.Value
    Settings["Menu/pPDF"] = mnuPdf.Value
    Settings["Menu/pMail"] = mnuMail.Value
    Settings["Menu/pPE"] = mnuPE.Value
    Settings["Menu/pELF"] = mnuELF.Value
    Settings["Menu/pOLE2"] = MnuOLE2.Value
    Settings["Menu/pARCH"] = MnuARCH.Value
    Settings["Menu/PhishingSig"] = MnuPhishingSig.Value
    Settings["Menu/PhishingUrl"] = MnuPhishingUrl.Value
    Settings["Menu/CrossFs"] = MnuCrossFs.value
    Settings["Menu/Algo"] = MnuAlgo.Value

End

Public Sub LoadSettings()                                                       'réglages enregistrés en conf

    MenuSon.Value = Settings["General/sons"]
    If MenuSon.Value = True Then
        SonOn = True
    Else
        SonOn = False
    Endif
    '************* Group Log1 *************************************************
    mnErrores.Value = Settings["Menu/Errores"]
    mnInfectados.Value = Settings["Menu/Infectes"]
    mnNoSummary.Value = Settings["Menu/NoSummary"]
    mnSupressOK.Value = Settings["Menu/SupprOK"]
    mnBell.Value = Settings["Menu/Bell"]
    MnuVerbose.Value = Settings["Menu/Verbose"]
    MnuArchVerbose.Value = Settings["Menu/ArchVerbose"]
    MnuDebug.value = Settings["Menu/Debug"]
    MnuJson.Value = Settings["Menu/Json"]
    '************* Group optionAvance par défaut OFF **************************
    mnRemover.Value = Settings["Menu/Remover"]
    mnDetectar.Value = Settings["Menu/Detectar"]
    MnuDeplacer.Value = Settings["Menu/Deplacer"]
    mnRecursivo.Value = Settings["Menu/Recursif"]
    MnuAllMatch.value = Settings["Menu/AllMatch"]
    MnuIntersection.Value = Settings["Menu/Intersection"]
    MnuStructured.Value = Settings["Menu/Structured"]
    '**************************************************************************
    MnuAuto.Value = Settings["Menu/Auto"]
    MnuManuelle.Value = Settings["Menu/Manuel"]
    MnuImmediate.Enabled = Settings["Menu/Immediat"]
    MnuVirus.Enabled = Settings["Menu/Virus"]
    langue = Settings["General/LangInit"]
    email = Settings["General/courriel"]
    nom = Settings["General/nom"]
    BtnDefaut.Value = Settings["General/limites"]
    '************* Group option1 par défaut ON ********************************
    mnuHWP3.Value = Settings["Menu/pHWP3"]
    mnuXML.Value = Settings["Menu/pXML"]
    mnuSWF.Value = Settings["Menu/pSWF"]
    mnuPdf.Value = Settings["Menu/pPDF"]
    mnuMail.Value = Settings["Menu/pMail"]
    mnuPE.Value = Settings["Menu/pPE"]
    mnuELF.Value = Settings["Menu/pELF"]
    MnuOLE2.Value = Settings["Menu/pOLE2"]
    MnuARCH.Value = Settings["Menu/pARCH"]
    MnuPhishingSig.Value = Settings["Menu/PhishingSig"]
    MnuPhishingUrl.Value = Settings["Menu/PhishingUrl"]
    MnuAlgo.Value = Settings["Menu/Algo"]
    MnuCrossFs.value = Settings["Menu/CrossFs"]
    '********** Toutes options transmises *************************************
    SalidaERR = mnErrores.Value
    infect = mnInfectados.Value
    SuprimirOK = mnSupressOK.Value
    SinINF = mnNoSummary.Value
    Bell = mnBell.Value
    Verbose = MnuVerbose.Value
    ArchVerbose = MnuArchVerbose.Value
    Adebug = MnuDebug.Value
    Json = MnuJson.Value
    '******************par défaut ON*******************************************
    mail = mnuMail.Value
    pdf = mnuPdf.Value
    Swf = mnuSWF.Value
    html = mnuXML.Value
    HWP3 = mnuHWP3.Value
    PE = mnuPE.Value
    ELF = mnuELF.Value
    OLE2 = MnuOLE2.Value
    ARCH = MnuARCH.Value
    PhishingSig = MnuPhishingSig.Value
    PhishingUrl = MnuPhishingUrl.Value
    Algo = MnuAlgo.Value
    CrossFs = MnuCrossFs.Value
    '*******************Par défaut OFF*****************************************
    AllMatch = MnuAllMatch.Value
    Remover = mnRemover.Value
    Quarant = MnuDeplacer.Value
    Recursive = mnRecursivo.Value
    AppsIndeseadas = mnDetectar.Value
    Intersection = MnuIntersection.Value
    Structured = MnuStructured.Value

    If langue = "fr" Then                                                       'langue dans menu
        MnuFrancais.Value = True
    Else If langue = "en" Then
        MnuAnglais.Value = True
    Else If langue = "es" Then
        MnuEspagnol.Value = True
    Else If langue = "ru" Then
        MnuRusse.Value = True
    Else If langue = "pt" Then
        MnuPortugais.Value = True
    Else If langue = "de" Then
        MnuAllemand.Value = True
    Else If langue = "it" Then
        MnuItalien.Value = True
    Endif

    If TBSudo.Value = True Then                                                 'idem à TBSudo_Click
        bSudo = True
        bTBSudo = True
    Endif
    If TBSudo.Value = False Then
        bSudo = False
        bTBSudo = False
    Endif

    If MnuDeplacer.Value = True Then                                            'voyant vert
        RB1.Background = Color.Red
        RB1.Enabled = False
    Else
        MnuDeplacer.Value = False                                               'voyant rouge
        RB1.Background = Color.Green
        RB1.Enabled = False
    Endif
    MnuVirus.Enabled = True
    MnuCorrompus.Enabled = True

    presentation()                                                              'présentation des informations de scan

End

Public Sub presentation()                                                       'présentation des informations de scan

    txSalida.text = ("Versión instalada: ") & ClamScan.Version()
    '********************** presente les limitations **************************
    txSalida.text &= ("Limitaciones:")                                          'limitations'
    txSalida.text &= gb.Tab
    If BtnDefaut.value = False Then
        txSalida.Text &= ("Defecto")
    Else
        txSalida.Text &= ("Max")
    Endif
    '********************** presente l'actualisation base *********************
    txSalida.text &= gb.Tab
    txSalida.text &= ("Actualización de la base de datos : ")                   'actualisation'gb.CrLf &
    If MnuAuto.Checked = True Then
        txSalida.Text &= ("automática") & gb.CrLf
    Else
        txSalida.Text &= ("manual") & gb.CrLf
    Endif
    '********************** presente les choix de session *********************
    txSalida.text &= ("Elección de sesión:") & gb.CrLf                          'session
    txSalida.text &= gb.Tab
    If mnErrores.Value = True Then txSalida.text &= "-quiet " & "ON ; "
    If mnNoSummary.Value = True Then txSalida.text &= "-no Summary " & "ON ; "
    If mnInfectados.Value = True Then txSalida.text &= "-infected " & "ON ; "
    If MnuVerbose.value = True Then txSalida.text &= "-verbose " & "ON ; "
    If mnSupressOK.value = True Then txSalida.text &= "-suppressOK " & "ON ; "
    If mnBell.value = True Then txSalida.text &= "-bell " & "ON ; "
    If MnuDebug.value = True Then txSalida.text &= "-debug " & "ON ; "
    If MnuArchVerbose.value = True Then txSalida.text &= "-archVerbose " & "ON ; "
    If MnuJson.value = True Then txSalida.text &= "-gen-json " & "ON ; "
    If mnErrores.Value = False And mnNoSummary.Value = False And mnInfectados.Value = False And MnuVerbose.value = False And mnSupressOK.value = False And mnBell.value = False And MnuDebug.value = False And MnuArchVerbose.value = False And MnuJson.value = False Then txSalida.text &= ("Sin selección")

    '********************** presente les options cochées **********************
    txSalida.text &= gb.CrLf & ("Opciones no marcadas por defecto :") & gb.CrLf 'options décochées par défaut
    txSalida.text &= gb.Tab
    If MnuAllMatch.Value = True Then txSalida.text &= "-allmatch " & "ON ; "
    If mnDetectar.Value = True Then txSalida.text &= "-detect-pua " & "ON ; "
    If mnRecursivo.Value = True Then txSalida.text &= "-recursive " & "ON ; "
    If MnuStructured.Value = True Then txSalida.text &= "-detect-structured " & "ON ; "
    If MnuIntersection.Value = True Then txSalida.text &= "-partition-intersection " & "ON ; "
    If mnRemover.Value = True Then txSalida.text &= "-remove " & "ON ; "
    If MnuDeplacer.Value = True Then txSalida.text &= "-move " & "ON ; "
    If MnuAllMatch.Value = False And mnDetectar.Value = False And mnRecursivo.Value = False And MnuStructured.Value = False And MnuIntersection.Value = False And mnRemover.Value = False And MnuDeplacer.Value = False Then txSalida.text &= ("Todo es OFF")
    '********************** presente les options non cochées ******************
    txSalida.text &= gb.CrLf & ("Opciones marcadas por defecto :") & gb.CrLf    'options cochées par défaut
    txSalida.text &= gb.Tab
    If MnuCrossFs.Value = False Then txSalida.text &= "-cross-fs " & "Off ; "
    If mnuHWP3.Value = False Then txSalida.text &= "-scan-hwp3 " & "Off ; "
    If mnuXML.Value = False Then txSalida.text &= "-scan-html " & "Off ; "
    If mnuSWF.value = False Then txSalida.text &= "-scan-swf " & "Off ; "
    If mnuPdf.value = False Then txSalida.text &= "-scan-pdf " & "Off ; "
    If mnuPE.value = False Then txSalida.text &= "-scan-pe " & "Off ; "
    If mnuELF.value = False Then txSalida.text &= "-scan-elf " & "Off ; "
    If MnuARCH.value = False Then txSalida.text &= "-scan-archive " & "Off ; "
    If mnuMail.value = False Then txSalida.text &= "-scan-mail " & "Off ; "
    If MnuAlgo.value = False Then txSalida.text &= "-algorithmic-detection " & "Off ; "
    If MnuPhishingSig.value = False Then txSalida.text &= "-phishing-sig " & "Off ; "
    If MnuPhishingUrl.value = False Then txSalida.text &= "-phishing-scan-url " & "Off ; "
    If MnuOLE2.value = False Then txSalida.text &= "-scan-OLE2 " & "Off ; "
    If MnuCrossFs.Value = True And mnuHWP3.Value = True And mnuXML.Value = True And mnuSWF.value = True And mnuPdf.value = True And mnuPE.value = True And mnuELF.value = True And MnuARCH.value = True And mnuMail.value = True And MnuAlgo.value = True And MnuPhishingSig.value = True And MnuPhishingUrl.value = True And MnuOLE2.value = True Then txSalida.text &= ("Todo es ON")
    '**************************************************************************
    txSalida.text &= gb.CrLf & ("Sudo : ")
    txSalida.text &= gb.Tab
    If TBSudo.Value = True Then txSalida.text &= "ON"
    If TBSudo.Value = False Then txSalida.text &= "OFF"

End

Public Sub TBSudo_Click()                                                       'bouton sudo enfoncé

    Module1.son(Module1.camera1)
    If TBSudo.Value = True Then                                                 'le bouton est enfoncé
        bSudo = True                                                            'boolean
        bTBSudo = True                                                          'boolean
        presentation
        Message.Title = (("¡Atención!"))
        Message.Info(("¡Todos sus pedidos son \n del SuperUsuario!"))
    Endif
    If TBSudo.Value = False Then                                                'le bouton n'est pas enfoncé
        bSudo = False
        bTBSudo = False
        presentation
    Endif

End

Public Sub SaveSettings()                                                       'sauvegarde des réglages en conf

    '********** Group log1 **************************************************** 'choix de session
    Settings["Menu/Errores"] = mnErrores.Value
    Settings["Menu/Infectes"] = mnInfectados.Value
    Settings["Menu/NoSummary"] = mnNoSummary.Value
    Settings["Menu/SupprOK"] = mnSupressOK.Value
    Settings["Menu/Bell"] = mnBell.Value
    Settings["Menu/Verbose"] = MnuVerbose.Value
    Settings["Menu/ArchVerbose"] = MnuArchVerbose.Value
    Settings["Menu/Debug"] = MnuDebug.value
    Settings["Menu/Json"] = MnuJson.Value
    '******** Group optionAvance ********************************************** 'options pas par défaut
    Settings["Menu/Recursif"] = mnRecursivo.Value
    Settings["Menu/Remover"] = mnRemover.Value
    Settings["Menu/Detectar"] = mnDetectar.Value
    Settings["Menu/Deplacer"] = MnuDeplacer.Value
    Settings["Menu/AllMatch"] = MnuAllMatch.value
    Settings["Menu/CrossFs"] = MnuCrossFs.value
    Settings["Menu/Intersection"] = MnuIntersection.Value
    Settings["Menu/Structured"] = MnuStructured.Value
    '******** recherche virus *************************************************
    Settings["Menu/Auto"] = MnuAuto.Value
    Settings["Menu/Manuel"] = MnuManuelle.Value
    Settings["Menu/Immediat"] = MnuImmediate.Enabled
    Settings["Menu/Virus"] = MnuVirus.Enabled
    '********* Group option1 ************************************************** 'options par défaut
    Settings["Menu/pHWP3"] = mnuHWP3.Value
    Settings["Menu/pXML"] = mnuXML.Value
    Settings["Menu/pSWF"] = mnuSWF.Value
    Settings["Menu/pPDF"] = mnuPdf.Value
    Settings["Menu/pMail"] = mnuMail.Value
    Settings["Menu/pPE"] = mnuPE.Value
    Settings["Menu/pELF"] = mnuELF.Value
    Settings["Menu/pOLE2"] = MnuOLE2.Value
    Settings["Menu/pARCH"] = MnuARCH.Value
    Settings["Menu/PhishingSig"] = MnuPhishingSig.Value
    Settings["Menu/PhishingUrl"] = MnuPhishingUrl.Value
    Settings["Menu/Algo"] = MnuAlgo.Value
    '**************************************************************************
    Settings["General/LangInit"] = langue
    Settings["General/limites"] = BtnDefaut.Value
    Settings["General/sons"] = MenuSon.Value

End

Public Sub Form_KeyPress()

    If Key.code = Key.Esc Then Me.Close

End

Public Sub FC_Activate()

    Ruta = Shell$(FC.SelectedPath)
    Scan_Activation()

End

Public Sub DC_Activate()

    Ruta = Shell$(DC.SelectedPath)
    Scan_Activation()

End

Public Sub Scan_Activation()

    Module1.son(Module1.Message1)
    If Message.Question(("Por favor, espere unos segundos mientras inicia el antivirus"), ("No"), ("Si")) = 1 Then Return
    menuFaux()                                                                  'menus désactivés
    txSalida.Clear                                                              'effacement Terminal
    ClamScan.ScanAction(Ruta)                                                   'module de scan activé
    menuVraix() '                                                               'menus activés

End

Public Sub _new()                                                               'pour remise à jour de certains éléments

    If Not IsNull(fc) Or Not IsNull(dc) Then
        maCle = 0
        Wait
        dc.Tooltip = ("Elija el directorio para escanear")
        fc.Tooltip = ("Elija el archivo para analizar")
    Endif
    menuVraix()                                                                 'menus activés

End

Public Sub FC_Change()                                                          'le file chooser a changé

    If fc.SelectedPath = "" Then
        _new()
    Else
        maCle = 1
        dc.Tooltip = ("")
        fc.Tooltip = ("")
    Endif

End

Public Sub DC_Change()                                                          'le dir chooser a changé

    If dc.SelectedPath = "" Then
        _new()
    Else
        maCle = 2
        dc.Tooltip = ("")
        fc.Tooltip = ("")
    Endif

End

Public Sub TBhProc_Click()                                                      'execute hproc

    If maCle = 0 Then
        Module1.son(Module1.beep)
        Message.Info(("Seleccione \n an objeto para escanear!"))
    Else If maCle = 1 Then
        FC_Activate
    Else If maCle = 2 Then
        DC_Activate
    Endif

    _new()

End

Public Sub menuFaux()                                                           'menus et boutons désactivés pendant le scan

    mnOpciones.Enabled = False
    mnOpcionesAvanzadas.Enabled = False
    MnuBase.Enabled = False
    MnuAction.Enabled = False
    mnAbout.Enabled = False
    fc.Enabled = False
    dc.Enabled = False
    tp.Enabled = False
    TBhProc.Enabled = False
    TBeffacer.Enabled = False
    TBSudo.Enabled = False
    TBPresent.Enabled = False
    BtnDefaut.Enabled = False
    SlidDirRecursion.Enabled = False
    SlidEmbPE.Enabled = False
    SlidFiles.Enabled = False
    SlidFilesize.Enabled = False
    SlidHtmlNorm.Enabled = False
    SlidHtmlTags.Enabled = False
    SlidIconsPE.Enabled = False
    SlidPartitions.Enabled = False
    SlidPcreFilesize.Enabled = False
    SlidPcreLimit.Enabled = False
    SlidPcreRecLimit.Enabled = False
    SlidRechWP3.Enabled = False
    Slidrecursion.Enabled = False
    SlidScansize.Enabled = False
    SlidScriptNorm.Enabled = False
    SlidZipType.Enabled = False
    Panel3.Visible = True
    FMain.txSalida3.Clear
    Wait

End

Public Sub menuVraix()                                                          'menus et boutons activés avant un scan

    mnOpciones.Enabled = True
    mnOpcionesAvanzadas.Enabled = True
    MnuBase.Enabled = True
    MnuAction.Enabled = True
    mnAbout.Enabled = True
    fc.Enabled = True
    dc.Enabled = True
    tp.Enabled = True
    DC.Reload
    FC.Reload
    TBhProc.Enabled = True
    TBeffacer.Enabled = True
    TBSudo.Enabled = True
    TBPresent.Enabled = True
    BtnDefaut.Enabled = True
    SlidDirRecursion.Enabled = True
    SlidEmbPE.Enabled = True
    SlidFiles.Enabled = True
    SlidFilesize.Enabled = True
    SlidHtmlNorm.Enabled = True
    SlidHtmlTags.Enabled = True
    SlidIconsPE.Enabled = True
    SlidPartitions.Enabled = True
    SlidPcreFilesize.Enabled = True
    SlidPcreLimit.Enabled = True
    SlidPcreRecLimit.Enabled = True
    SlidRechWP3.Enabled = True
    Slidrecursion.Enabled = True
    SlidScansize.Enabled = True
    SlidScriptNorm.Enabled = True
    SlidZipType.Enabled = True
    Panel3.Visible = False
    Wait

End

Public Sub TBKill_Click()                                                       'Bouton kill hproc

    If IsNull(ClamScan.hProc) Then                                              'pas de processus à tuer
        _new()
        Module1.son(Module1.beep)
        Message.Info(("Seleccione \n an objeto para escanear!"))
        Return
    Endif

    If ClamScan.hProc.State = ClamScan.hProc.Running Then                       'si le process tourne

        Module1.son(Module1.shade)
        FMain.txSalida3.Clear
        FMain.txSalida2.Clear
        FMain.txSalida2.Text = ("Espere mientras se apaga el antivirus")        'affichage dans terminal du bas
        FMain.txSalida3.Text = (" Interrupción del trabajo ")                   'affichage dans terminal du bas

        bTBKill = True                                                          'marque le fait de kill le process

        If FMain.bSudo = True Then
            Authenticate.Command("sudo killall -u root -9 clamscan")            'montexte est affecté à la commande du process
            Wait                                                                'pour établissement de Authenticate
            If FMain.bFlag = True Then
                Shell FMain.monTexte
            Else
                Shell "killall -u root -9 clamscan" & Application.Id
            Endif
        Else
            ClamScan.hProc.Kill                                                 'on tue le processus voir le ClamScan.Scan_Kill()
        Endif
        _new()
    Else                                                                        'si le process ne tourne pas
        Module1.son(Module1.OpenApp)
        Message(("¡El proceso ya se detuvo!"))
    Endif

    FMain.monTexte = ""                                                         'pour être sûr!

End

Public Sub mnAcerca_Click()                                                     'menu à propos

    Me.Hide
    frmAbout.ShowModal()
    FMain.Show()

End

Public Sub MnuHistoric_Click()                                                  'montre l'historique global

    FMain.Mouse = Mouse.Wait
    Wait
    iForm = 0
    FrmGeneral.ShowModal()
    Me.Hide
    FMain.Mouse = Mouse.Default
    FMain.Show()

End

Public Sub MnuLog_Click()                                                       'montre les Logs

    FMain.Mouse = Mouse.Wait
    Wait
    iForm = 1
    FrmGeneral.ShowModal()
    Me.Hide
    FMain.Mouse = Mouse.Default
    FMain.Show()

End

Public Sub mnFreshclam_Click()                                                  'montre le fichier freshclam Log

    FMain.Mouse = Mouse.Wait
    Wait
    iForm = 2
    FrmGeneral.ShowModal()
    Me.Hide
    FMain.Mouse = Mouse.Default
    FMain.Show()

End

Public Sub mnClamav_Click()                                                     'montre le fichier freshclam Log

    FMain.Mouse = Mouse.Wait
    Wait
    iForm = 7
    FrmGeneral.ShowModal()
    Me.Hide
    FMain.Mouse = Mouse.Default
    FMain.Show()

End

Public Sub mnClamavmilter_Click()                                                  'montre le fichier freshclam Log

    FMain.Mouse = Mouse.Wait
    Wait
    iForm = 8
    FrmGeneral.ShowModal()
    Me.Hide
    FMain.Mouse = Mouse.Default
    FMain.Show()

End

Public Sub Config_Click()                                                       'lecture ou édition des fichiers de config

    If MnuConfClamd.Value = True Then iFlag = 0
    If MnuConfFresh.Value = True Then iFlag = 1
    If MnuConfMilter.Value = True Then iFlag = 2

    FMain.Hide()
    iForm = 3
    FrmGeneral.ShowModal()
    FMain.Show()

End

Public Sub Exemples_Click()                                                     'pour l'instant lecture des fichiers exemples

    If MnuExempleClamd.Value = True Then iFlag = 3
    If MnuExempleFreshclam.Value = True Then iFlag = 4
    If MnuExempleMilter.Value = True Then iFlag = 5

    FMain.Hide()
    iForm = 3
    FrmGeneral.ShowModal()
    FMain.Show()

End

Public Sub MnuAide_Click()                                                      'affichage de l'aide

    Me.Hide
    iForm = 4
    FrmGeneral.ShowModal()
    FMain.Show()

End

Public Sub MnuVirus_Click()                                                     'Affichage du fichier des virus découverts

    FMain.Mouse = Mouse.Wait
    Wait
    Me.Hide
    iForm = 5

    If Not Exist(liste) Then                                                    'liste des fichiers en quarantaine
        fListe = Open liste For Create
    Endif

    FrmGeneral.ShowModal()
    FMain.Mouse = Mouse.Default
    FMain.Show()
    DC.Reload
    FC.Reload

End

Public Sub MnuCorrompus_Click()                                                 'fichiers potentiellement corrompus

    FMain.Mouse = Mouse.Wait
    Wait
    Me.Hide
    iForm = 6

    If Not Exist(pil) Then                                                      'liste des fichiers corrompus
        fPil = Open pil For Create
    Endif

    FrmGeneral.ShowModal()
    FMain.Mouse = Mouse.Default
    FMain.Show()
    DC.Reload
    FC.Reload

End

Public Sub mnu_click()                                                          'group mnu Mise à jour Freshclam

    If MnuManuelle.Checked = False Then                                         'mise à jour automatique
        sMot = "/etc/init.d/clamav-freshclam start"
        Authenticate.Command("sudo " & sMot)
        Wait
        If bFlag = True Then                                                    'bFlag=True si Auto validée dans Authenticate
            MnuAuto.Checked = True
            MnuManuelle.Checked = False
            MnuImmediate.Enabled = False
        Else                                                                    'bFlag=True si manuelle validée dans Authenticate
            MnuManuelle.Checked = True
            MnuImmediate.Enabled = True
            MnuAuto.Checked = False
            mnu_click
        Endif
    Else If MnuAuto.Checked = False Then                                        'mise à jour manuelle
        sMot = "/etc/init.d/clamav-freshclam stop"
        Authenticate.Command("sudo " & sMot)
        Wait
        If bFlag = True Then                                                    'bFlag=True si manuelle validée dans Authenticate
            MnuManuelle.Checked = True
            MnuImmediate.Enabled = True
            MnuAuto.Checked = False
        Else
            MnuAuto.Checked = True                                              'bFlag=True si Auto validée dans Authenticate
            MnuManuelle.Checked = False
            MnuImmediate.Enabled = False
            mnu_click
        Endif
    Else If MnuAuto.Checked = True Then                                         'mise à jour automatique
        MnuManuelle.Checked = False
        MnuImmediate.Enabled = False
    Else If MnuManuelle.Checked = True Then                                     'mise à jour manuelle
        MnuImmediate.Enabled = True
        MnuAuto.Checked = False
    Endif

    Module1.son(Module1.Message2)
    presentation()                                                              'des informations de scan

End

Public Sub MnuImmediate_Click()                                                 'Mise à jour Freshclam manuelle et immédiate

    If MnuManuelle.Checked = True Then
        sMot = "sudo freshclam"
        Authenticate.Command(sMot)
        Wait
    Endif

End

Public Sub langue_Click()                                                       'choix de la langue et affichage du menu checked

    Module1.son(Module1.camera1)
    If MnuEspagnol.Checked = True Then langue = "es"
    If MnuFrancais.Checked = True Then langue = "fr"
    If MnuAnglais.Checked = True Then langue = "en"
    If MnuAllemand.Checked = True Then langue = "de"
    If MnuItalien.checked = True Then langue = "it"
    If MnuPortugais.checked = True Then langue = "pt"
    If MnuRusse.Checked = True Then langue = "ru"
    AppliLangues()

End

Public Sub AppliLangues()                                                       'application du choix de langue par redémarrage auto

    Message.Title = ("El idioma elegido se aplicará después del reinicio")
    If Message.Question(("¿Quieres renunciar?") & gb.CrLf &
            ("El idioma elegido se aplicará después de reiniciar el programa."), ("Si"), ("No")) = 2 Then
        loadSettings()
        Module1.son(Module1.shade)
    Else
        Module1.son(Module1.powerplug)
        Settings["General/LangInit"] = langue
        Settings.Save
        '*** ATTENTION ligne suivante à Décommenté lors du travail dans l'IDE et à commenter avant de générer l'executable ***
        ' Shell "gbx3 " & Application.Path
        Shell "kill -9 " & Application.id
        '*** ATTENTION ligne suivante à décommenter avant de générer l'executable ***
        Exec [Application.Path & "/" & Application.Name]
    Endif

End

Public Sub TBeffacer_Click()                                                    'bouton effacer le texte du textarea1

    Module1.son(Module1.Message2)
    FMain.txSalida.Clear

End

Public Sub Log1_Click()                                                         'menu des enregistrements de session

    Settings["Menu/Errores"] = mnErrores.Value
    Settings["Menu/Infectes"] = mnInfectados.Value
    Settings["Menu/NoSummary"] = mnNoSummary.Value
    Settings["Menu/SupprOK"] = mnSupressOK.Value
    Settings["Menu/Bell"] = mnBell.Value
    Settings["Menu/Verbose"] = MnuVerbose.Value
    Settings["Menu/ArchVerbose"] = MnuArchVerbose.Value
    Settings["Menu/Debug"] = MnuDebug.value
    Settings["Menu/Json"] = MnuJson.Value

    SalidaERR = mnErrores.Value                                                 'valeurs transmises
    infect = mnInfectados.Value
    SuprimirOK = mnSupressOK.Value
    SinINF = mnNoSummary.Value
    Bell = mnBell.Value
    Verbose = MnuVerbose.Value
    ArchVerbose = MnuArchVerbose.Value
    Adebug = MnuDebug.Value
    Json = MnuJson.Value

    Module1.son(Module1.camera1)
    SaveSettings()
    presentation()                                                              'affichage des changements dans terminal

End

Public Sub option1_Click()                                                      'menu des options + ou cochées par défaut

    Settings["Menu/pHWP3"] = mnuHWP3.Value
    Settings["Menu/pXML"] = mnuXML.Value
    Settings["Menu/pSWF"] = mnuSWF.Value
    Settings["Menu/pPDF"] = mnuPdf.Value
    Settings["Menu/pMail"] = mnuMail.Value
    Settings["Menu/pPE"] = mnuPE.Value
    Settings["Menu/pELF"] = mnuELF.Value
    Settings["Menu/pOLE2"] = MnuOLE2.Value
    Settings["Menu/pARCH"] = MnuARCH.Value
    Settings["Menu/PhishingSig"] = MnuPhishingSig.Value
    Settings["Menu/PhishingUrl"] = MnuPhishingUrl.Value
    Settings["Menu/Algo"] = MnuAlgo.Value
    Settings["Menu/CrossFs"] = MnuCrossFs.Value

    mail = mnuMail.Value                                                        'valeurs transmises
    pdf = mnuPdf.Value
    Swf = mnuSWF.Value
    html = mnuXML.Value
    HWP3 = mnuHWP3.Value
    PE = mnuPE.Value
    ELF = mnuELF.Value
    OLE2 = MnuOLE2.Value
    ARCH = MnuARCH.Value
    PhishingSig = MnuPhishingSig.Value
    PhishingUrl = MnuPhishingUrl.Value
    Algo = MnuAlgo.Value
    CrossFs = MnuCrossFs.Value

    Module1.son(Module1.camera1)
    SaveSettings()
    presentation()                                                              'affichage des changements dans terminal

End

Public Sub optionAvance_Click()                                                     'menu des options avancées ou non cochées par défaut

    If MnuDeplacer.Value = True Then
        RB1.Background = Color.Red
        RB1.Enabled = False
    Else
        MnuDeplacer.Value = False
        RB1.Background = Color.Green
        RB1.Enabled = False
    Endif

    Settings["Menu/Recursif"] = mnRecursivo.Value
    Settings["Menu/Remover"] = mnRemover.Value
    Settings["Menu/Detectar"] = mnDetectar.Value
    Settings["Menu/Deplacer"] = MnuDeplacer.Value
    Settings["Menu/AllMatch"] = MnuAllMatch.value
    Settings["Menu/Intersection"] = MnuIntersection.Value
    Settings["Menu/Structured"] = MnuStructured.Value

    Remover = mnRemover.Value                                                   'valeurs transmises
    Quarant = MnuDeplacer.Value
    Recursive = mnRecursivo.Value
    AppsIndeseadas = mnDetectar.Value
    AllMatch = MnuAllMatch.Value
    Intersection = MnuIntersection.Value
    Structured = MnuStructured.Value

    Module1.son(Module1.camera1)
    SaveSettings()
    presentation()                                                              'affichage des changements dans terminal

End

Public Sub MnuLimit_Click()                                                     'apparition ou non des limites

    If PanLimit.Visible = False Then
        PanLimit.Visible = True
        Me.Center
    Else
        PanLimit.Visible = False
        Me.Center
    Endif

End

Public Sub limit_Change()                                                       'changement des limites

    If SlidFilesize.value = SlidFilesize.DefaultValue Then sCommande = ""
    If SlidScansize.Value = SlidScansize.DefaultValue Then sCommande = ""
    If SlidFiles.Value = SlidFiles.DefaultValue Then sCommande = ""
    If Slidrecursion.Value = Slidrecursion.DefaultValue Then sCommande = ""
    If SlidDirRecursion.value = SlidDirRecursion.DefaultValue Then sCommande = ""
    If SlidEmbPE.Value = SlidEmbPE.DefaultValue Then sCommande = ""
    If SlidHtmlNorm.Value = SlidHtmlNorm.DefaultValue Then sCommande = ""
    If SlidHtmlTags.Value = SlidHtmlTags.DefaultValue Then sCommande = ""
    If SlidScriptNorm.Value = SlidScriptNorm.DefaultValue Then sCommande = ""
    If SlidPartitions.Value = SlidPartitions.DefaultValue Then sCommande = ""
    If SlidIconsPE.Value = SlidIconsPE.DefaultValue Then sCommande = ""
    If SlidRechWP3.Value = SlidRechWP3.DefaultValue Then sCommande = ""
    If SlidPcreLimit.Value = SlidPcreLimit.DefaultValue Then sCommande = ""
    If SlidPcreRecLimit.Value = SlidPcreRecLimit.DefaultValue Then sCommande = ""
    If SlidPcreFilesize.Value = SlidPcreFilesize.DefaultValue Then sCommande = ""
    If SlidZipType.Value = SlidZipType.DefaultValue Then sCommande = ""

End

Public Sub limit_Leave()                                                        'application des changements des limites

    sCommande = ""
    If SlidFilesize.value <> SlidFilesize.DefaultValue Then sCommande = sCommande & " --max-filesize=" & CStr(SlidFilesize.Value) & "M"
    If SlidScansize.Value <> SlidScansize.DefaultValue Then sCommande = sCommande & " --max-scansize=" & CStr(SlidScansize.Value) & "M"
    If SlidFiles.Value <> SlidFiles.DefaultValue Then sCommande = sCommande & " --max-files=" & CStr(SlidFiles.Value)
    If Slidrecursion.Value <> Slidrecursion.DefaultValue Then sCommande = sCommande & " --max-recursion=" & CStr(Slidrecursion.Value)
    If SlidDirRecursion.value <> SlidDirRecursion.DefaultValue Then sCommande = sCommande & " --max-dir-recursion=" & CStr(SlidDirRecursion.Value)
    If SlidEmbPE.Value <> SlidEmbPE.DefaultValue Then sCommande = sCommande & " --max-embeddedpe=" & CStr(SlidEmbPE.Value) & "M"
    If SlidHtmlNorm.Value <> SlidHtmlNorm.DefaultValue Then sCommande = sCommande & " --max-htmlnormalize=" & CStr(SlidHtmlNorm.Value) & "M"
    If SlidHtmlTags.Value <> SlidHtmlTags.DefaultValue Then sCommande = sCommande & " --max-htmlnotags=" & CStr(SlidHtmlTags.Value) & "M"
    If SlidScriptNorm.Value <> SlidScriptNorm.DefaultValue Then sCommande = sCommande & " --max-scriptnormalize=" & CStr(SlidScriptNorm.Value) & "M"
    If SlidPartitions.Value <> SlidPartitions.DefaultValue Then sCommande = sCommande & " --max-partitions=" & CStr(SlidPartitions.Value)
    If SlidIconsPE.Value <> SlidIconsPE.DefaultValue Then sCommande = sCommande & " -- max-iconspe=" & CStr(SlidIconsPE.Value)

    If SlidRechWP3.Value <> SlidRechWP3.DefaultValue Then sCommande = sCommande & "  --max-rechwp3=" & CStr(SlidRechWP3.Value)
    If SlidPcreLimit.Value <> SlidPcreLimit.DefaultValue Then sCommande = sCommande & "  --pcre-match-limit=" & CStr(SlidPcreLimit.Value)
    If SlidPcreRecLimit.Value <> SlidPcreRecLimit.DefaultValue Then sCommande = sCommande & " --pcre-recmatch-limit=" & CStr(SlidPcreRecLimit.Value)
    If SlidPcreFilesize.Value <> SlidPcreFilesize.DefaultValue Then sCommande = sCommande & " --pcre-max-filesize=" & CStr(SlidPcreFilesize.Value) & "M"
    If SlidZipType.Value <> SlidZipType.DefaultValue Then sCommande = sCommande & " --max-ziptypercg=" & CStr(SlidZipType.Value) & "M"

End

Public Sub BtnDefaut_Click()                                                    'Changement état du Bouton défaut dans les limites

    FMain.sCommande = ""
    If BtnDefaut.value = False Then                                             'Défaut
        BtnDefaut.Text = ("Defecto")
        SlidFilesize.value = SlidFilesize.DefaultValue
        SlidScansize.Value = SlidScansize.DefaultValue
        SlidFiles.Value = SlidFiles.DefaultValue
        Slidrecursion.Value = Slidrecursion.DefaultValue
        SlidDirRecursion.value = SlidDirRecursion.DefaultValue
        SlidEmbPE.Value = SlidEmbPE.DefaultValue
        SlidHtmlNorm.Value = SlidHtmlNorm.DefaultValue
        SlidHtmlTags.Value = SlidHtmlTags.DefaultValue
        SlidScriptNorm.Value = SlidScriptNorm.DefaultValue
        SlidPartitions.Value = SlidPartitions.DefaultValue
        SlidIconsPE.Value = SlidIconsPE.DefaultValue
        SlidRechWP3.Value = SlidRechWP3.DefaultValue
        SlidPcreLimit.Value = SlidPcreLimit.DefaultValue
        SlidPcreRecLimit.Value = SlidPcreRecLimit.DefaultValue
        SlidPcreFilesize.Value = SlidPcreFilesize.DefaultValue
        SlidZipType.Value = SlidZipType.DefaultValue
    Else                                                                        'Max
        BtnDefaut.Text = ("Max")
        SlidFilesize.value = SlidFilesize.MaxValue
        SlidScansize.Value = SlidScansize.MaxValue
        SlidFiles.Value = SlidFiles.MaxValue
        Slidrecursion.Value = Slidrecursion.MaxValue
        SlidDirRecursion.value = SlidDirRecursion.MaxValue
        SlidEmbPE.Value = SlidEmbPE.MaxValue
        SlidHtmlNorm.Value = SlidHtmlNorm.MaxValue
        SlidHtmlTags.Value = SlidHtmlTags.MaxValue
        SlidScriptNorm.Value = SlidScriptNorm.MaxValue
        SlidPartitions.Value = SlidPartitions.MaxValue
        SlidIconsPE.Value = SlidIconsPE.MaxValue
        SlidRechWP3.Value = SlidRechWP3.MaxValue
        SlidPcreLimit.Value = SlidPcreLimit.MaxValue
        SlidPcreRecLimit.Value = SlidPcreRecLimit.MaxValue
        SlidPcreFilesize.Value = SlidPcreFilesize.MaxValue
        SlidZipType.Value = SlidZipType.MaxValue
    Endif
    If Entree = False Then
        Module1.son(Module1.camera1)                                            'pour éviter ce son au démarrage du prog
    Endif
    limit_Leave()                                                               'Application des limites
    presentation()                                                              'affichage des changements dans terminal

End

Public Function GitVersion(raw As String) As String                             'test de la version github du prog.

    Dim s As String
    Dim stx As String[]
    Dim r As String
    Dim v As String

    v = ""
    If Exist("/tmp/project.txt") Then
        Shell "rm /tmp/project.txt" Wait
    Endif

    Shell "wget -O '/tmp/project.txt' '" & raw & "'" Wait
    If Exist("/tmp/project.txt") Then
        s = File.Load("/tmp/project.txt")
        stx = Split(s, "\n")
        For Each r In stx
            If InStr(r, "Version=") Then
                If Split(r, "=")[0] = "Version" Then
                    v = Split(r, "=")[1]
                    Break
                Endif
            Endif
        Next
    Endif
    Return v

End

Public Sub mnuMiseAJour_Click()                                                 'menu mise à jour sur github

    Dim vChk As String

    vChk = GitVersion("https://raw.githubusercontent.com/mcattani/clamscangui/master/.project")

    If Application.Version < vChk Then
        Message.Info(("Nueva versión encontrada!") & ": " & "v" & vChk)
        frmUpdate.Show
    Else
        Module1.son(Module1.beep)
        Message.Info(("No hay actualizaciones disponibles"))
    Endif

End

Public Sub TBPresent_Click()                                                    'bouton d'apparition de la présentation des infos de scan

    Module1.son(Module1.Message2)
    presentation()                                                              'affichage des changements dans terminal

End

Public Sub MenuSon_Click()

    If MenuSon.Value = True Then
        SonOn = True
    Else
        SonOn = False
    Endif

End

Public Sub MnuLynis_Click()

End

Public Sub MnuTiger_Click()

End

Public Sub TBSudo2_Click()                                                      'limitations

    MnuLimit_Click()

End
